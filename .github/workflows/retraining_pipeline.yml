name: Advanced CI - Train, Commit, and Build Docker Image

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  train-build-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    env:
      MLFLOW_CONDA_HOME: /usr/share/miniconda

    steps:
      # 1. Checkout source code dan Git LFS
      - name: 1. Checkout Repository (with Git LFS)
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: 2. Set up Git LFS
        run: git lfs pull

      # 3. Setup Miniconda dan environment conda
      - name: 3. Set up Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: 3.12
          environment-file: MLProject/conda.yaml
          activate-environment: fraud_detection_env

      # 4. Jalankan MLflow training dan dapatkan RUN_ID
      - name: 4. Run MLflow Project and Get Run ID
        id: training_run
        shell: bash -l {0}
        working-directory: ./MLProject
        env:
          MLFLOW_TRACKING_URI: file://$(pwd)/mlruns
        run: |
          echo "Running MLflow training..."
          mlflow run . --experiment-name "Automated CI Training" | tee run_output.txt
          LATEST_RUN_ID=$(grep "run with ID" run_output.txt | awk '{print $NF}' | tr -d "'")
          echo "RUN_ID=$LATEST_RUN_ID" >> $GITHUB_ENV
          echo "Latest run ID: $LATEST_RUN_ID"

      # 5. Commit artefak lokal ke repository
      - name: 5. Commit MLflow Artifacts to Repo
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "ci: Update MLflow run and model artifacts"
          file_pattern: |
            MLProject/mlruns/
            MLProject/champion_rf_model_local/

      # 6. Login ke Docker Hub
      - name: 6. Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 7. Build dan push Docker image dari model
      - name: 7. Build and Push Docker Image
        working-directory: ./MLProject
        shell: bash -l {0}
        env:
          MLFLOW_TRACKING_URI: file://$(pwd)/mlruns
        run: |
          IMAGE_NAME="${{ secrets.DOCKERHUB_USERNAME }}/fraud-detection-model:latest"
          echo "Building Docker image: $IMAGE_NAME"
          mlflow models build-docker \
            --model-uri "runs:/${{ env.RUN_ID }}/model" \
            --name "$IMAGE_NAME"
          echo "Pushing Docker image..."
          docker push "$IMAGE_NAME"

      # 8. Konfirmasi push berhasil
      - name: 8. Confirm Docker Push
        run: |
          echo "Image pushed to Docker Hub: ${{ secrets.DOCKERHUB_USERNAME }}/fraud-detection-model:latest"
