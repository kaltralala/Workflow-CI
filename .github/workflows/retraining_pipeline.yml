name: Advanced CI - Train, Commit, and Build Docker Image

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  train-commit-build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Set up job
        run: echo "Starting the CI/CD job..."

      - name: Run actions/checkout@v4
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Set up Python 3.12
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: 3.12
          # Membuat dan mengaktifkan env dari file
          environment-file: MLProject/conda.yaml
          activate-environment: fraud_detection_env

      - name: Check Env
        shell: bash -l {0}
        run: |
          echo "Conda environment is ready."
          conda info --envs
          python --version

      - name: Install dependencies
        shell: bash -l {0}
        run: echo "Dependencies installed via conda.yaml."

      - name: Run mlflow project
        shell: bash -l {0}
        working-directory: ./MLProject
        run: mlflow run . --experiment-name "Automated CI Training"

      - name: Get Latest MLflow Run ID
        id: get_run_id
        shell: bash -l {0}
        working-directory: ./MLProject
        run: |
          LATEST_META_FILE=$(find mlruns -name "meta.yaml" -printf '%T@ %p\n' | sort -n | tail -1 | cut -d' ' -f2-)

          if [[ -z "$LATEST_META_FILE" ]]; then
            echo "Error: Tidak dapat menemukan file meta.yaml di dalam direktori mlruns."
            ls -R mlruns # Cetak isi mlruns untuk debugging
            exit 1
          fi

          LATEST_RUN_ID=$(grep "run_id:" "$LATEST_META_FILE" | awk '{print $2}')
          
          echo "Discovered MLflow Run ID: $LATEST_RUN_ID"
          
          echo "RUN_ID=$LATEST_RUN_ID" >> $GITHUB_ENV

      - name: Commit to GitHub Repo
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "ci: Update mlruns artifacts after training"
          file_pattern: 'MLProject/mlruns/'

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 7. Build and Push Docker Image
        working-directory: ./MLProject
        shell: bash -l {0}
        run: |
            IMAGE_NAME="${{ secrets.DOCKERHUB_USERNAME }}/fraud-detection-model:latest"
            echo "Building Docker image for Run ID: ${{ env.RUN_ID }}"
            
            mlflow models build-docker \
              --model-uri "runs:/${{ env.RUN_ID }}/model" \
              --name "$IMAGE_NAME"
            
            echo "Pushing Docker image: $IMAGE_NAME"
            docker push "$IMAGE_NAME"

      - name: Complete job
        run: echo "Workflow completed successfully!"